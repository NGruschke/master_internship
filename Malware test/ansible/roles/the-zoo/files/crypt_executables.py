#!/usr/bin/env python3

import argparse
import getpass
import os
import subprocess


def get_file_paths(target_dir):
    dir_listing = os.listdir(target_dir)
    all_files = list()
    for file in dir_listing:
        full_path = os.path.join(target_dir, file)
        if os.path.isdir(full_path):
            all_files = all_files + get_file_paths(full_path)
        else:
            all_files.append(full_path)
    return all_files

def zip_decrypt_file(file_to_decryt, dest_dir,password):
    dst_dir = os.path.dirname(dest_dir)
    try:
        system = subprocess.Popen([
            "7z","e","-aou",file_to_decryt, "-p{}".format(password)
        ])
        system.communicate()
    except Exception as e:
        print("[-] Error when decrypting %s: %s" % (file_to_decryt, e))

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("-i", "--indir", required=True)
    parser.add_argument("-p","--password", required=False)
    args = parser.parse_args()

    source_dir = args.indir
    dest_dir = "/usr/share/theZoo"
    password = args.password
    if not password:
        print("[i] Enter password to decrypt:")
        password = getpass.getpass("> ")

    cwd = os.getcwd()

    files_to_decrypt = get_file_paths(source_dir)

    for file in files_to_decrypt:
        if file.endswith(".zip") or file.endswith(".7z"):
            zip_decrypt_file(file,dest_dir,password)
            os.chdir(cwd)


if __name__ == "__main__":
    main()