# Network Interface
resource "azurerm_network_interface" "malwaretest-vm-windows10-nic" {
  name                = "malwaretest-vm-windows10-nic"
  location            = data.azurerm_resource_group.malwaretest-rg.location
  resource_group_name = data.azurerm_resource_group.malwaretest-rg.name

  ip_configuration {
    name                          = "malwaretest-vm-windows10-config"
    subnet_id                     = azurerm_subnet.malwaretest-subnet.id
    private_ip_address_allocation = "Static"
    private_ip_address            = "10.13.37.150"
  }
}

resource "azurerm_network_interface_nat_rule_association" "malwaretest-vm-windows10-nic-nat" {
  network_interface_id  = azurerm_network_interface.malwaretest-vm-windows10-nic.id
  ip_configuration_name = "malwaretest-vm-windows10-config"
  nat_rule_id           = azurerm_lb_nat_rule.malwaretest-lb-nat-rdp.id
}

resource "azurerm_network_interface" "malwaretest-vm-debian-nic" {
  name                = "malwaretest-vm-debian-nic"
  location            = data.azurerm_resource_group.malwaretest-rg.location
  resource_group_name = data.azurerm_resource_group.malwaretest-rg.name

  ip_configuration {
    name                          = "malwaretest-vm-debian-nic-config"
    subnet_id                     = azurerm_subnet.malwaretest-subnet.id
    private_ip_address_allocation = "Static"
    private_ip_address            = "10.13.37.200"
  }
}

resource "azurerm_network_interface_nat_rule_association" "malwaretest-vm-debian-nic-nat" {
  network_interface_id  = azurerm_network_interface.malwaretest-vm-debian-nic.id
  ip_configuration_name = "malwaretest-vm-debian-nic-config"
  nat_rule_id           = azurerm_lb_nat_rule.malwaretest-lb-nat-ssh.id
}

# Virtual Machine
resource "azurerm_windows_virtual_machine" "malwaretest-vm-windows10" {
  name                     = "malwaretest-vm-windows10"
  computer_name            = "${var.win10-hostname}-${random_string.windowshostname.result}"
  size                     = var.win10-size
  provision_vm_agent       = true
  enable_automatic_updates = true
  resource_group_name      = data.azurerm_resource_group.malwaretest-rg.name
  location                 = data.azurerm_resource_group.malwaretest-rg.location
  timezone                 = var.timezone
  admin_username           = var.windows-user
  admin_password           = random_string.windowspass.result
  custom_data              = local.custom_data_content
  network_interface_ids = [
    azurerm_network_interface.malwaretest-vm-windows10-nic.id,
  ]

  os_disk {
    name                 = "malwaretest-vm-windows10-osdisk"
    caching              = "ReadWrite"
    storage_account_type = "StandardSSD_LRS"
  }

  source_image_reference {
    publisher = "MicrosoftWindowsDesktop"
    offer     = "Windows-10"
    sku       = "win10-21h2-ent-g2"
    version   = "latest"
  }

  additional_unattend_content {
    setting = "AutoLogon"
    content = "<AutoLogon><Password><Value>${random_string.windowspass.result}</Value></Password><Enabled>true</Enabled><LogonCount>1</LogonCount><Username>${var.windows-user}</Username></AutoLogon>"
  }

  additional_unattend_content {
    setting = "FirstLogonCommands"
    content = file("${path.module}/files/FirstLogonCommands.xml")
  }

  tags = {
    DoNotAutoShutDown = "yes"
  }
}

# Virtual Machine
resource "azurerm_linux_virtual_machine" "malwaretest-vm-debian" {
  name                            = "malwaretest-vm-debian"
  computer_name                   = var.debian-hostname
  resource_group_name             = data.azurerm_resource_group.malwaretest-rg.name
  location                        = data.azurerm_resource_group.malwaretest-rg.location
  size                            = var.debian-size
  disable_password_authentication = false
  admin_username                  = var.linux-user
  admin_password                  = random_string.linuxpass.result
  network_interface_ids = [
    azurerm_network_interface.malwaretest-vm-debian-nic.id,
  ]

  os_disk {
    name                 = "malwaretest-vm-debian-osdisk"
    caching              = "ReadWrite"
    storage_account_type = "StandardSSD_LRS"
  }

  source_image_reference {
    publisher = "Debian"
    offer     = "debian-11"
    sku       = "11-gen2"
    version   = "latest"
  }

  tags = {
    DoNotAutoShutDown = "yes"
  }
}
