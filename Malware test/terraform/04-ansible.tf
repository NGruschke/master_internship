# Prepare the Windows group variable template with the right username and password
resource "local_file" "ansible-groupvars-windows-creation" {

  depends_on = [
    var.windows-user,
    random_string.windowspass
  ]

  content = templatefile("${path.module}/../ansible/group_vars/windows.tmpl",
    {
      username  = var.windows-user
      password  = random_string.windowspass.result
      urledrmsi = var.url-edr
      sharepassword = random_string.linuxpass.result
  })

  filename = "../ansible/group_vars/windows.yml"
}

# Prepare the Linux group variable template with the right username and password
resource "local_file" "ansible-groupvars-linux-creation" {

  depends_on = [
    var.linux-user,
    random_string.linuxpass
  ]

  content = templatefile("${path.module}/../ansible/group_vars/linux.tmpl",
    {
      username = var.linux-user
      password = random_string.linuxpass.result
      smbpass  = random_string.sharepass.result
  })

  filename = "../ansible/group_vars/linux.yml"
}


# Provision the lab using Ansible from the debian machine
resource "null_resource" "ansible-provisioning" {

  # All VMs have to be up before provisioning can be initiated, and we always trigger
  triggers = {
    always_run = "${timestamp()}"

    windows10_id  = azurerm_windows_virtual_machine.malwaretest-vm-windows10.id
    debian_id     = azurerm_linux_virtual_machine.malwaretest-vm-debian.id
  }

  connection {
    type     = "ssh"
    host     = azurerm_public_ip.malwaretest-ip.ip_address
    user     = var.linux-user
    password = random_string.linuxpass.result
  }

  # Copy Ansible folder to debian machine for provisioning
  provisioner "file" {
    source      = "../ansible"
    destination = "/dev/shm"
  }

  # Kick off ansible
  provisioner "remote-exec" {
    inline = [
      "sudo apt -qq update >/dev/null && sudo apt -qq install -y git ansible python3 p7zip-full sshpass >/dev/null",
      "ansible-galaxy collection install ansible.windows chocolatey.chocolatey community.general >/dev/null",
      "cd /dev/shm/ansible",
      #"ansible-playbook malwaretest.yml --skip-tags install_msi"
      #"ansible-playbook malwaretest.yml --skip-tags install_exe"
    ]
  }
}
